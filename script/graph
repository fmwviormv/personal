#!/bin/sh

read GRAPH

set -- $(echo "$GRAPH" | sed -Ee "s/^struct +([a-zA-Z_0-9]+) *{[^}]*} *\
\*([a-zA-Z_0-9]+)\[([a-zA-Z_0-9]+)N *\+ *1\];\$/\1 \2 \3/")

if test "$#" -ne "3"; then
	echo "Wrong usage: use as follow:"
	echo "struct e { int y; } *a[MaxN + 1];"
	exit 1
fi

cat << END
void		 readgraph(int);
int		 picmp(const void *, const void *);

$GRAPH

void
readgraph(const int ne)
{
	static struct $1	 _$2[2 * ${3}E];
	int		 e[2 * ${3}E][2];
	for (int i = 0; i < 2 * ne; ++i) {
		int		 x, y;
		scanf("%d%d", &x, &y);
		*e[e[i][1] = i] = x - 1;
		buf[i].y = y - 1;
		++i;
		*e[e[i][1] = i] = y - 1;
		buf[i].y = x - 1;
	}
	qsort(e, 2 * ne, sizeof(*e), picmp);
	for (int i = 0, j; i < 2 * ne; ++i) {
		struct $1	 tmp = buf[j = i];
		for (int k; (k = e[j][1]) != i; j = k)
			buf[e[j][1] = j] = buf[k];
		buf[e[j][1] = j] = tmp;
	}
	*$2 = _$2;
	for (int i = 0, j = 0; i < ${3}N; ++i) {
		$2[i + 1] = $2[i];
		for (; j < 2 * ne && e[j][0] == i; ++j)
			++$2[i + 1];
	}
}

int
picmp(const void *px, const void *py)
{
	const int	*x = px, *y = py;
	if (x[0] != y[0])
		return x[0] < y[0] ? -1 : x[0] > y[0];
	else
		return x[1] < y[1] ? -1 : x[1] > y[1];
}


END
